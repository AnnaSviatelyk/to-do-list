{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/besosmp/Desktop/projects/To-do-list/src/js/domStrings.js\",\"/Users/besosmp/Desktop/projects/To-do-list/src/js/helpers.js\",\"/Users/besosmp/Desktop/projects/To-do-list/src/js/Task.js\",\"/Users/besosmp/Desktop/projects/To-do-list/src/js/TaskView.js\",\"/Users/besosmp/Desktop/projects/To-do-list/src/js/TasksController.js\",\"/Users/besosmp/Desktop/projects/To-do-list/src/js/TaskModel.js\",\"/Users/besosmp/Desktop/projects/To-do-list/src/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"DOMstrings\",\"inputSummary\",\"newItem\",\"createNewItem\",\"input\",\"enableEdit\",\"submitBtn\",\"cancelBtn\",\"tasksContainer\",\"deleteBtn\",\"editBtn\",\"doneBtn\",\"BtnsContainer\",\"editBtnsContainer\",\"exitEditBtn\",\"taskCheckbox\",\"taskCheckboxContainer\",\"inputForTaskUpdate\",\"taskNameWrapper\",\"time\",\"date\",\"formatTime\",\"js_Task\",\"[object Object]\",\"summary\",\"this\",\"id\",\"length\",\"result\",\"characters\",\"charactersLength\",\"charAt\",\"Math\",\"floor\",\"random\",\"makeid\",\"doneExitBtns\",\"editDeleteBtns\",\"spanHeightWithOneLine\",\"maxTextAreaHeight\",\"js_TaskView\",\"updateSummary\",\"keyPressHandler\",\"editBtnClickHandler\",\"documentClickHandler\",\"clickOnExitBtnHandler\",\"checkboxDisplayHandler\",\"task\",\"container\",\"document\",\"querySelector\",\"element\",\"getTaskHtmlString\",\"insertAdjacentHTML\",\"createdElement\",\"getElementById\",\"addTaskEventListeners\",\"parentNode\",\"removeChild\",\"addEventListener\",\"js_TasksController\",\"deleteTask\",\"event\",\"stopPropagation\",\"editingElement\",\"target\",\"closest\",\"textContent\",\"btnsContainer\",\"innerHTML\",\"textSpanHeight\",\"firstElementChild\",\"offsetHeight\",\"editInput\",\"textArea\",\"firstChild\",\"select\",\"inputHandler\",\"nextHeight\",\"min\",\"textAreaPaddingTop\",\"parseFloat\",\"window\",\"getComputedStyle\",\"getPropertyValue\",\"style\",\"height\",\"editingTask\",\"checkbox\",\"classList\",\"contains\",\"remove\",\"add\",\"afterExitSpan\",\"taskElement\",\"removeEventListener\",\"className\",\"includes\",\"rows\",\"scrollHeight\",\"keyCode\",\"preventDefault\",\"afterEditSpan\",\"updateTask\",\"taskModel\",\"tasks\",\"newTask\",\"push\",\"saveChangesToLocalStorage\",\"JSON\",\"parse\",\"localStorage\",\"getItem\",\"index\",\"findIndex\",\"cur\",\"splice\",\"find\",\"setItem\",\"stringify\",\"taskView\",\"createTask\",\"addTaskToUI\",\"readTasks\",\"forEach\",\"itemID\",\"removeTaskFromUI\",\"newItemStyle\",\"createNewItemStyle\",\"toggleSubmitBtn\",\"renderTasks\",\"display\",\"addTask\",\"day\",\"month\",\"year\",\"hours\",\"minutes\",\"now\",\"Date\",\"getDate\",\"getMonth\",\"getFullYear\",\"getHours\",\"getMinutes\",\"getCurrentTime\",\"init\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 1);\\n\",\"export const DOMstrings = {\\n    inputSummary: '.task__description',\\n    newItem: '.new-item',\\n    createNewItem: '.add-new-item',\\n    input: '.add-new-item__description',\\n    enableEdit: '.task__name',\\n    submitBtn: '.add-new-item__btn-add-task',\\n    cancelBtn: '.add-new-item__btn-cancel',\\n    tasksContainer: '.tasks-container',\\n    deleteBtn: '.task__btn-delete',\\n    editBtn: '.task__btn-edit',\\n    doneBtn: '.task__btn-done',\\n    BtnsContainer: '.task__btns',\\n    editBtnsContainer: '.task__btns--edit',\\n    exitEditBtn: '.task__btn-exit-edit',\\n    taskCheckbox: '.task__checkbox_svg',\\n    taskCheckboxContainer: '.task__checkbox',\\n    inputForTaskUpdate: '.task__edit-input-text',\\n    taskNameWrapper: '.task__name-wrapper',\\n    time: '.header__data--time',\\n    date: '.header__data--date'\\n\\n}\",\"//Generate Random String (creating a unique ID)\\nexport function makeid(length = 5) {\\n    let result = ''\\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\\n    const charactersLength = characters.length\\n    for (let i = 0; i < length; i++) {\\n        result += characters.charAt(Math.floor(Math.random() * charactersLength))\\n    }\\n    return result\\n}\\n\\n\\nexport function getCurrentTime() {\\n\\n    const now = new Date()\\n    const day = now.getDate()\\n\\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\\n    const curMonth = now.getMonth()\\n    const month = months[curMonth]\\n    const year = now.getFullYear()\\n    let hours = now.getHours()\\n    hours = formatTime(hours)\\n    let minutes = now.getMinutes()\\n    minutes = formatTime(minutes)\\n\\n    return { day, month, year, hours, minutes }\\n}\\n\\nfunction formatTime(time) {\\n    return time < 10 ? `0${time}` : time\\n}\\n\",\"import { makeid } from './helpers'\\n\\n\\n\\n// class Task descr id summary priority\\n\\nclass Task {\\n    constructor(summary) {\\n        this.summary = summary;\\n        this.id = makeid(5);\\n    }\\n}\\n\\nexport default Task\",\"import { DOMstrings } from './domStrings'\\nimport TasksController from './TasksController'\\n\\nconst doneExitBtns = `<i class=\\\"task__btn-done\\\"></i>\\n<i class=\\\"task__btn-exit-edit\\\"></i>`\\nconst editDeleteBtns = `<i class=\\\"task__btn-edit\\\"></i>\\n<i class=\\\"task__btn-delete\\\"></i>`\\nconst spanHeightWithOneLine = 37\\nconst maxTextAreaHeight = 100\\n\\n\\nclass TaskView {\\n    constructor() {\\n        this.updateSummary = this.updateSummary.bind(this)\\n        this.keyPressHandler = this.keyPressHandler.bind(this)\\n        this.editBtnClickHandler = this.editBtnClickHandler.bind(this)\\n        this.documentClickHandler = this.documentClickHandler.bind(this)\\n        this.clickOnExitBtnHandler = this.clickOnExitBtnHandler.bind(this)\\n        this.checkboxDisplayHandler = this.checkboxDisplayHandler.bind(this)\\n    }\\n\\n    addTaskToUI(task) {\\n        const container = document.querySelector(DOMstrings.tasksContainer)\\n        const element = this.getTaskHtmlString(task)\\n        container.insertAdjacentHTML('beforeend', element)\\n\\n        const createdElement = document.getElementById(task.id)\\n        this.addTaskEventListeners(createdElement)\\n\\n    }\\n\\n    removeTaskFromUI(id) {\\n        const element = document.getElementById(id)\\n        element.parentNode.removeChild(element)\\n    }\\n\\n    addTaskEventListeners(element) {\\n        element.querySelector(DOMstrings.editBtn).addEventListener('click', this.editBtnClickHandler)\\n        element.querySelector(DOMstrings.deleteBtn).addEventListener('click', TasksController.deleteTask)\\n        element.querySelector(DOMstrings.taskCheckbox).addEventListener('animationend', (event) => {\\n            TasksController.deleteTask(event, true)\\n        });\\n    }\\n\\n\\n    editBtnClickHandler(event) {\\n        event.stopPropagation()\\n\\n        const editingElement = event.target.closest(\\\".task\\\")\\n        const value = editingElement.querySelector('.task__name').textContent\\n\\n        const btnsContainer = event.target.closest(DOMstrings.BtnsContainer)\\n\\n        this.checkboxDisplayHandler(editingElement);\\n\\n        //Replacing buttons \\n        btnsContainer.innerHTML = doneExitBtns\\n\\n        //Summary container\\n        const taskNameWrapper = document.getElementById(editingElement.id).querySelector(DOMstrings.taskNameWrapper)\\n        const textSpanHeight = taskNameWrapper.firstElementChild.offsetHeight;\\n\\n        //Adding eventlisteners doneExitBtns\\n        document.querySelector(DOMstrings.doneBtn).addEventListener('click', this.updateSummary)\\n        document.querySelector(DOMstrings.exitEditBtn).addEventListener('click', (event) => {\\n            this.clickOnExitBtnHandler(event, value, taskNameWrapper, btnsContainer)\\n        })\\n\\n        const editInput = `<textarea class=\\\"task__edit-input-text \\\" type=\\\"text\\\" autofocus>${value}</textarea>`\\n        taskNameWrapper.innerHTML = editInput\\n\\n\\n        const textArea = taskNameWrapper.firstChild\\n        textArea.select()\\n\\n        textArea.addEventListener('input', this.inputHandler)\\n        document.addEventListener('click', this.documentClickHandler)\\n        textArea.addEventListener('keypress', this.keyPressHandler)\\n\\n        ///Making textarea initial size\\n        let nextHeight = Math.min(maxTextAreaHeight, textSpanHeight)\\n        const textAreaPaddingTop = parseFloat(window.getComputedStyle(textArea, null).getPropertyValue('padding-top'))\\n        textArea.style.height = nextHeight + (2 * textAreaPaddingTop) + 'px'\\n    }\\n\\n    checkboxDisplayHandler(editingTask) {\\n        const checkbox = editingTask.querySelector(DOMstrings.taskCheckboxContainer)\\n        if (checkbox.classList.contains('task__checkbox--hidden')) {\\n            checkbox.classList.remove('task__checkbox--hidden')\\n        } else {\\n            checkbox.classList.add('task__checkbox--hidden')\\n        }\\n    }\\n\\n    clickOnExitBtnHandler(event, value, taskNameWrapper, btnsContainer) {\\n        const afterExitSpan = ` <span class=\\\"task__name\\\">${value}</span>`\\n        const taskElement = event.target.closest('.task')\\n\\n        taskNameWrapper.innerHTML = afterExitSpan\\n        btnsContainer.innerHTML = editDeleteBtns\\n\\n        this.checkboxDisplayHandler(taskElement)\\n\\n        this.addTaskEventListeners(taskElement)\\n        document.removeEventListener('click', this.documentClickHandler)\\n\\n\\n    }\\n\\n    documentClickHandler(event) {\\n        const ignoringElements = ['task__edit-input-text', 'task__btn-done', 'task__btn-exit-edit']\\n        const className = event.target.classList[0]\\n\\n        if (!ignoringElements.includes(className)) {\\n            this.updateSummary()\\n        }\\n    }\\n\\n    inputHandler(event) {\\n        const value = event.target.value\\n        event.target.rows = 1\\n        event.target.style.height = 'auto'\\n        if (value === '') {\\n            event.target.style.height = spanHeightWithOneLine + 'px'\\n            event.target.classList.add('task__edit-input-text--invalid')\\n\\n        } else {\\n            const scrollHeight = event.target.scrollHeight;\\n            let nextHeight = Math.min(maxTextAreaHeight, scrollHeight)\\n\\n            event.target.style.height = nextHeight + 'px'\\n            event.target.classList.remove('task__edit-input-text--invalid')\\n        }\\n    }\\n\\n    keyPressHandler(event) {\\n        if (event.keyCode === 13) {\\n            event.preventDefault();\\n            if (event.target.value !== '') {\\n                this.updateSummary(event)\\n            }\\n        }\\n    }\\n\\n    updateSummary() {\\n        const input = document.querySelector(DOMstrings.inputForTaskUpdate)\\n        const value = input.value\\n        const taskElement = input.closest(\\\".task\\\")\\n        const id = taskElement.id\\n\\n        const btnsContainer = taskElement.querySelector(DOMstrings.BtnsContainer)\\n        const taskNameWrapper = taskElement.querySelector(DOMstrings.taskNameWrapper)\\n\\n        this.checkboxDisplayHandler(taskElement)\\n\\n        if (value !== '') {\\n            document.removeEventListener('click', this.documentClickHandler)\\n            const afterEditSpan = ` <span class=\\\"task__name\\\">${value}</span>`\\n            btnsContainer.innerHTML = editDeleteBtns\\n            taskNameWrapper.innerHTML = afterEditSpan\\n            this.addTaskEventListeners(taskElement)\\n            TasksController.updateTask(id, value)\\n        }\\n    }\\n\\n    getTaskHtmlString(task) {\\n        return (`<div class=\\\"task\\\" id=\\\"${task.id}\\\">\\n        <div class=\\\"task__content-wrapper\\\">\\n        <div class=\\\"task__description\\\">\\n        <label class='task__checkbox'>\\n        <input type=\\\"checkbox\\\" name=\\\"check\\\">\\n        <svg version=\\\"1.1\\\" class=\\\"task__checkbox_svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"\\n            xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" x=\\\"0px\\\" y=\\\"0px\\\" viewBox=\\\"0 0 100 100\\\"\\n            style=\\\"enable-background:new 0 0 100 100;\\\" xml:space=\\\"preserve\\\">\\n            <polyline class=\\\"task__checkbox_line\\\" points=\\\"3.5,45.5 40.5,82.5 95.7,15.3 \\\"\\n                stroke-linecap=\\\"round\\\" /></svg>\\n    </label>\\n    \\n    <div class=\\\"task__name-wrapper\\\">\\n    <span class=\\\"task__name\\\" title=\\\"${task.summary}\\\">${task.summary}</span>\\n    </div>\\n    </div>\\n    <div class=\\\"task__btns\\\">\\n    <i class=\\\"task__btn-edit\\\"></i>\\n    <i class=\\\"task__btn-delete\\\"></i>\\n    </div>\\n    </div>\\n    <div class=\\\"line\\\"></div></div>`)\\n    }\\n\\n}\\n\\nexport default TaskView;\",\"import { DOMstrings } from './domStrings'\\nimport TaskModel from './TaskModel'\\nimport TaskView from './TaskView'\\n\\n\\nconst taskModel = new TaskModel()\\nconst taskView = new TaskView()\\n// CRUD // Create Read Update Delete\\n\\nclass TasksController {\\n    createTask(summary) {\\n        const newTask = taskModel.createTask(summary)\\n        //Add new task to UI\\n\\n        taskView.addTaskToUI({ ...newTask })\\n    }\\n\\n    renderTasks() {\\n        const tasks = taskModel.readTasks();\\n        tasks.forEach(cur => taskView.addTaskToUI(cur))\\n    }\\n\\n    deleteTask(event) {\\n        const itemID = event.target.closest(\\\".task\\\").id\\n        taskModel.deleteTask(itemID)\\n\\n        //Remove task from UI \\n        taskView.removeTaskFromUI(itemID)\\n        taskModel.saveChangesToLocalStorage()\\n\\n    }\\n\\n    //Edit Task\\n    updateTask(id, value) {\\n        taskModel.updateTask(id, value)\\n    };\\n\\n}\\n\\n\\nconst tasksController = new TasksController()\\n\\nexport default tasksController\",\"import Task from './Task'\\n\\nclass TaskModel {\\n    constructor() {\\n        this.tasks = []\\n\\n    }\\n\\n    createTask(summary) {\\n        //Create New Task\\n        const newTask = new Task(summary)\\n\\n        //Push new task into data structure (this.tasks array)\\n        this.tasks.push(newTask)\\n        this.saveChangesToLocalStorage()\\n        return newTask\\n\\n    }\\n\\n    readTasks() {\\n        this.tasks = JSON.parse(localStorage.getItem('tasks')) || []\\n        return this.tasks\\n    }\\n\\n    //Delete task\\n    deleteTask(id) {\\n        //Delete task from data structure\\n        const index = this.tasks.findIndex(cur => cur.id === id)\\n\\n        if (index !== -1) {\\n            this.tasks.splice(index, 1)\\n        }\\n\\n        this.saveChangesToLocalStorage()\\n    }\\n\\n    //Edit Task\\n    updateTask(id, value) {\\n        const currentTask = this.tasks.find(cur => cur.id === id)\\n        currentTask.summary = value\\n        this.saveChangesToLocalStorage()\\n    }\\n\\n\\n    saveChangesToLocalStorage() {\\n        localStorage.setItem('tasks', JSON.stringify(this.tasks))\\n    }\\n\\n}\\n\\n\\nexport default TaskModel;\",\"import './main.scss';\\nimport TasksController from './js/TasksController'\\nimport { DOMstrings } from './js/domStrings'\\nimport { getCurrentTime } from './js/helpers'\\n\\n\\nconst init = () => {\\n    const newItemStyle = document.querySelector(DOMstrings.newItem)\\n    const createNewItemStyle = document.querySelector(DOMstrings.createNewItem)\\n    const toggleSubmitBtn = document.querySelector(DOMstrings.submitBtn)\\n\\n\\n    //\\n    TasksController.renderTasks()\\n\\n    //Click on add new item\\n    document.querySelector(DOMstrings.newItem).addEventListener('click', () => {\\n        newItemStyle.style.display = 'none'\\n        createNewItemStyle.style.display = 'inline-block'\\n        document.querySelector(DOMstrings.input).value = ''\\n    });\\n\\n    //Click on submit btn\\n    const addTask = (summary) => {\\n        if (summary.length) {\\n            TasksController.createTask(summary)\\n            newItemStyle.style.display = 'inline-flex'\\n            createNewItemStyle.style.display = 'none'\\n        }\\n    }\\n\\n    document.querySelector(DOMstrings.submitBtn).addEventListener('click', () => {\\n        const summary = document.querySelector(DOMstrings.input).value;\\n        toggleSubmitBtn.classList.add('add-new-item__btn-add-task--disabled')\\n        addTask(summary)\\n    });\\n\\n    //Press on enter\\n    document.querySelector(DOMstrings.input).addEventListener('keypress', (event) => {\\n        if (event.keyCode === 13) {\\n            const summary = event.target.value\\n            addTask(summary)\\n        }\\n    });\\n\\n    //Input change\\n\\n    document.querySelector(DOMstrings.input).addEventListener('input', () => {\\n        toggleSubmitBtn.classList.remove('add-new-item__btn-add-task--disabled')\\n    });\\n\\n\\n    //Click on cancel btn\\n    document.querySelector(DOMstrings.cancelBtn).addEventListener('click', () => {\\n        newItemStyle.style.display = 'inline-flex'\\n        createNewItemStyle.style.display = 'none'\\n    });\\n\\n    const { day, month, year, hours, minutes } = getCurrentTime();\\n    document.querySelector(DOMstrings.date).textContent = `${day} ${month}, ${year}`\\n    document.querySelector(DOMstrings.time).textContent = `${hours}:${minutes}`\\n\\n};\\n\\n\\ninit();\\n\"]}","code":"!function(e){var t={};function n(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var a in e)n.d(s,a,function(t){return e[t]}.bind(null,a));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=1)}([function(e,t,n){},function(e,t,n){\"use strict\";n.r(t);n(0);const s={inputSummary:\".task__description\",newItem:\".new-item\",createNewItem:\".add-new-item\",input:\".add-new-item__description\",enableEdit:\".task__name\",submitBtn:\".add-new-item__btn-add-task\",cancelBtn:\".add-new-item__btn-cancel\",tasksContainer:\".tasks-container\",deleteBtn:\".task__btn-delete\",editBtn:\".task__btn-edit\",doneBtn:\".task__btn-done\",BtnsContainer:\".task__btns\",editBtnsContainer:\".task__btns--edit\",exitEditBtn:\".task__btn-exit-edit\",taskCheckbox:\".task__checkbox_svg\",taskCheckboxContainer:\".task__checkbox\",inputForTaskUpdate:\".task__edit-input-text\",taskNameWrapper:\".task__name-wrapper\",time:\".header__data--time\",date:\".header__data--date\"};function a(e){return e<10?`0${e}`:e}var i=class{constructor(e){this.summary=e,this.id=function(e=5){let t=\"\";const n=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\",s=n.length;for(let a=0;a<e;a++)t+=n.charAt(Math.floor(Math.random()*s));return t}(5)}};const r='<i class=\"task__btn-done\"></i>\\n<i class=\"task__btn-exit-edit\"></i>',d='<i class=\"task__btn-edit\"></i>\\n<i class=\"task__btn-delete\"></i>',c=37,o=100;var l=class{constructor(){this.updateSummary=this.updateSummary.bind(this),this.keyPressHandler=this.keyPressHandler.bind(this),this.editBtnClickHandler=this.editBtnClickHandler.bind(this),this.documentClickHandler=this.documentClickHandler.bind(this),this.clickOnExitBtnHandler=this.clickOnExitBtnHandler.bind(this),this.checkboxDisplayHandler=this.checkboxDisplayHandler.bind(this)}addTaskToUI(e){const t=document.querySelector(s.tasksContainer),n=this.getTaskHtmlString(e);t.insertAdjacentHTML(\"beforeend\",n);const a=document.getElementById(e.id);this.addTaskEventListeners(a)}removeTaskFromUI(e){const t=document.getElementById(e);t.parentNode.removeChild(t)}addTaskEventListeners(e){e.querySelector(s.editBtn).addEventListener(\"click\",this.editBtnClickHandler),e.querySelector(s.deleteBtn).addEventListener(\"click\",m.deleteTask),e.querySelector(s.taskCheckbox).addEventListener(\"animationend\",e=>{m.deleteTask(e,!0)})}editBtnClickHandler(e){e.stopPropagation();const t=e.target.closest(\".task\"),n=t.querySelector(\".task__name\").textContent,a=e.target.closest(s.BtnsContainer);this.checkboxDisplayHandler(t),a.innerHTML=r;const i=document.getElementById(t.id).querySelector(s.taskNameWrapper),d=i.firstElementChild.offsetHeight;document.querySelector(s.doneBtn).addEventListener(\"click\",this.updateSummary),document.querySelector(s.exitEditBtn).addEventListener(\"click\",e=>{this.clickOnExitBtnHandler(e,n,i,a)});const c=`<textarea class=\"task__edit-input-text \" type=\"text\" autofocus>${n}</textarea>`;i.innerHTML=c;const l=i.firstChild;l.select(),l.addEventListener(\"input\",this.inputHandler),document.addEventListener(\"click\",this.documentClickHandler),l.addEventListener(\"keypress\",this.keyPressHandler);let u=Math.min(o,d);const k=parseFloat(window.getComputedStyle(l,null).getPropertyValue(\"padding-top\"));l.style.height=u+2*k+\"px\"}checkboxDisplayHandler(e){const t=e.querySelector(s.taskCheckboxContainer);t.classList.contains(\"task__checkbox--hidden\")?t.classList.remove(\"task__checkbox--hidden\"):t.classList.add(\"task__checkbox--hidden\")}clickOnExitBtnHandler(e,t,n,s){const a=` <span class=\"task__name\">${t}</span>`,i=e.target.closest(\".task\");n.innerHTML=a,s.innerHTML=d,this.checkboxDisplayHandler(i),this.addTaskEventListeners(i),document.removeEventListener(\"click\",this.documentClickHandler)}documentClickHandler(e){const t=e.target.classList[0];[\"task__edit-input-text\",\"task__btn-done\",\"task__btn-exit-edit\"].includes(t)||this.updateSummary()}inputHandler(e){const t=e.target.value;if(e.target.rows=1,e.target.style.height=\"auto\",\"\"===t)e.target.style.height=c+\"px\",e.target.classList.add(\"task__edit-input-text--invalid\");else{const t=e.target.scrollHeight;let n=Math.min(o,t);e.target.style.height=n+\"px\",e.target.classList.remove(\"task__edit-input-text--invalid\")}}keyPressHandler(e){13===e.keyCode&&(e.preventDefault(),\"\"!==e.target.value&&this.updateSummary(e))}updateSummary(){const e=document.querySelector(s.inputForTaskUpdate),t=e.value,n=e.closest(\".task\"),a=n.id,i=n.querySelector(s.BtnsContainer),r=n.querySelector(s.taskNameWrapper);if(this.checkboxDisplayHandler(n),\"\"!==t){document.removeEventListener(\"click\",this.documentClickHandler);const e=` <span class=\"task__name\">${t}</span>`;i.innerHTML=d,r.innerHTML=e,this.addTaskEventListeners(n),m.updateTask(a,t)}}getTaskHtmlString(e){return`<div class=\"task\" id=\"${e.id}\">\\n        <div class=\"task__content-wrapper\">\\n        <div class=\"task__description\">\\n        <label class='task__checkbox'>\\n        <input type=\"checkbox\" name=\"check\">\\n        <svg version=\"1.1\" class=\"task__checkbox_svg\" xmlns=\"http://www.w3.org/2000/svg\"\\n            xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\"\\n            style=\"enable-background:new 0 0 100 100;\" xml:space=\"preserve\">\\n            <polyline class=\"task__checkbox_line\" points=\"3.5,45.5 40.5,82.5 95.7,15.3 \"\\n                stroke-linecap=\"round\" /></svg>\\n    </label>\\n    \\n    <div class=\"task__name-wrapper\">\\n    <span class=\"task__name\" title=\"${e.summary}\">${e.summary}</span>\\n    </div>\\n    </div>\\n    <div class=\"task__btns\">\\n    <i class=\"task__btn-edit\"></i>\\n    <i class=\"task__btn-delete\"></i>\\n    </div>\\n    </div>\\n    <div class=\"line\"></div></div>`}};const u=new class{constructor(){this.tasks=[]}createTask(e){const t=new i(e);return this.tasks.push(t),this.saveChangesToLocalStorage(),t}readTasks(){return this.tasks=JSON.parse(localStorage.getItem(\"tasks\"))||[],this.tasks}deleteTask(e){const t=this.tasks.findIndex(t=>t.id===e);-1!==t&&this.tasks.splice(t,1),this.saveChangesToLocalStorage()}updateTask(e,t){this.tasks.find(t=>t.id===e).summary=t,this.saveChangesToLocalStorage()}saveChangesToLocalStorage(){localStorage.setItem(\"tasks\",JSON.stringify(this.tasks))}},k=new l;var m=new class{createTask(e){const t=u.createTask(e);k.addTaskToUI({...t})}renderTasks(){u.readTasks().forEach(e=>k.addTaskToUI(e))}deleteTask(e){const t=e.target.closest(\".task\").id;u.deleteTask(t),k.removeTaskFromUI(t),u.saveChangesToLocalStorage()}updateTask(e,t){u.updateTask(e,t)}};(()=>{const e=document.querySelector(s.newItem),t=document.querySelector(s.createNewItem),n=document.querySelector(s.submitBtn);m.renderTasks(),document.querySelector(s.newItem).addEventListener(\"click\",()=>{e.style.display=\"none\",t.style.display=\"inline-block\",document.querySelector(s.input).value=\"\"});const i=n=>{n.length&&(m.createTask(n),e.style.display=\"inline-flex\",t.style.display=\"none\")};document.querySelector(s.submitBtn).addEventListener(\"click\",()=>{const e=document.querySelector(s.input).value;n.classList.add(\"add-new-item__btn-add-task--disabled\"),i(e)}),document.querySelector(s.input).addEventListener(\"keypress\",e=>{if(13===e.keyCode){const t=e.target.value;i(t)}}),document.querySelector(s.input).addEventListener(\"input\",()=>{n.classList.remove(\"add-new-item__btn-add-task--disabled\")}),document.querySelector(s.cancelBtn).addEventListener(\"click\",()=>{e.style.display=\"inline-flex\",t.style.display=\"none\"});const{day:r,month:d,year:c,hours:o,minutes:l}=function(){const e=new Date,t=e.getDate(),n=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"][e.getMonth()],s=e.getFullYear();let i=e.getHours();i=a(i);let r=e.getMinutes();return{day:t,month:n,year:s,hours:i,minutes:r=a(r)}}();document.querySelector(s.date).textContent=`${r} ${d}, ${c}`,document.querySelector(s.time).textContent=`${o}:${l}`})()}]);","extractedComments":[]}